{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "IoTHubNamePrefix": {
      "type": "SecureString",
      "metadata": {
        "description": "Specifies the name of the IoT Hub."
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "containerName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the blob container."
      }
    },
    "serverNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name for the SQL Server."
      }
    },
    "serverAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SQl Server Admin Username for the SQL Server."
      }
    },
    "serverAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SQl Server Admin Password for the SQL Server."
      }
    },
    "Serverlogin": {
      "type": "string",
      "defaultValue": "string",
      "metadata": {
        "description": "Specifies the AD login for the SQL Server."
      }
    },
    "subscriptionid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD object id."
      }
    },
    "objectid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD object id."
      }
    },
    "tenantid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD tenantid."
      }
    }
  },
    "variables": {
    "IoTHubName": "[concat( parameters('IoTHubNamePrefix'), uniqueString(resourceGroup().id) )]",
    "storageAccountName": "[toLower( concat( parameters('storageAccountNamePrefix'), uniqueString(resourceGroup().id) ) )]",
    "serverName": "[concat( parameters('serverNamePrefix'), uniqueString(resourceGroup().id) )]",
    "resourceGroupName": "[resourceGroup().name]",
    "location": "[resourceGroup().location]",
    "tags": "[resourceGroup().tags]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
          //"defaultToOAuthAuthentication": false,
          //"allowCrossTenantReplication": false,
          "minimumTlsVersion": "TLS1_2",
          "allowBlobPublicAccess": true,
          "allowSharedKeyAccess": true,
          "isHnsEnabled": true,
          "networkAcls": {
              "bypass": "AzureServices",
              "virtualNetworkRules": [],
              "ipRules": [],
              "defaultAction": "Allow"
          },
          "supportsHttpsTrafficOnly": true,
          "encryption": {
              "services": {
                  "blob": {
                      "keyType": "Account",
                      "enabled": true
                  }
              },
              "keySource": "Microsoft.Storage"
          },
          "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
      },
      "properties": {
          "containerDeleteRetentionPolicy": {
              "enabled": true,
              "days": 7
          },
          "cors": {
              "corsRules": []
          },
          "deleteRetentionPolicy": {
              "allowPermanentDelete": false,
              "enabled": false
          }
      }
    },
   {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default/', parameters('containerName'))]",
      "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
          "defaultEncryptionScope": "$account-encryption-key",
          "denyEncryptionScopeOverride": false,
          "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2021-07-02",
      "name": "[variables('IoTHubName')]",
      "location": "[variables('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Storage/StorageAccounts', variables('storageAccountName'))]"
      ],
      "tags": "[variables('tags')]",
      "sku": {
          "name": "S1",
          "tier": "Standard",
          "capacity": 2
      },
      "identity": {
          "type": "SystemAssigned"
      },
      "properties": {
          "ipFilterRules": [],
          "eventHubEndpoints": {
              "events": {
                  "retentionTimeInDays": 1,
                  "partitionCount": 4
              }
          },
          "routing": {
              "endpoints": {
                  "serviceBusQueues": [],
                  "serviceBusTopics": [],
                  "eventHubs": [],
                  "storageContainers": [
                      {
                          "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]",
                          "containerName": "[parameters('containerName')]",
                          "fileNameFormat": "{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}.json",
                          "batchFrequencyInSeconds": 100,
                          "maxChunkSizeInBytes": 104857600,
                          "encoding": "json",
                          //"endpointUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/')]",
                          //"authenticationType": "identityBased",
                          "name": "datalake"
                          //"id": "a4c48ba2-5d66-4b5e-aac0-8d43a933da1d",
                          //"subscriptionId": "[variables('subscriptionid')]",
                          //"resourceGroup": "[variables('resourceGroupName')]"
                      }
                  ]
              },
              "routes": [
                  {
                      "name": "events",
                      "source": "DeviceMessages",
                      "condition": "true",
                      "endpointNames": [
                          "events"
                      ],
                      "isEnabled": true
                  },
                  {
                      "name": "datalake",
                      "source": "DeviceMessages",
                      "condition": "true",
                      "endpointNames": [
                          "datalake"
                      ],
                      "isEnabled": true
                  }
              ],
              "fallbackRoute": {
                  "name": "$fallback",
                  "source": "DeviceMessages",
                  "condition": "true",
                  "endpointNames": [
                      "events"
                  ],
                  "isEnabled": true
              }
          },
          "storageEndpoints": {
              "$default": {
                  "sasTtlAsIso8601": "PT1H",
                  "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]",
                  "containerName": "[parameters('ContainerName')]"
              }
          },
          "messagingEndpoints": {
              "fileNotifications": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
              }
          },
          "enableFileUploadNotifications": false,
          "cloudToDevice": {
              "maxDeliveryCount": 10,
              "defaultTtlAsIso8601": "PT1H",
              "feedback": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
              }
          },
          "features": "None",
          "minTlsVersion": "1.2",
          "disableLocalAuth": false,
          "allowedFqdnList": []
      }
    },
    {
      "name": "[variables('serverName')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2020-11-01-preview",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "administratorLogin": "[parameters('serverAdminUsername')]",
        "administratorLoginPassword": "[parameters('serverAdminPassword')]",
        "version": "12.0",
        "minimalTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "administrators": {
          "administratorType": "ActiveDirectory",
          "principalType": "User",
          "login": "[parameters('serverlogin')]",
          "sid": "[parameters('objectid')]",
          "tenantId": "[parameters('tenantid')]"
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2020-11-01-preview",
      "name": "[concat(variables('serverName'), '/IoT')]",
      "location": "[variables('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
      ],
      "tags": "[variables('tags')]",
      "sku": {
          "name": "Standard",
          "tier": "Standard",
          "capacity": 50
      },
      "kind": "v12.0,user",
      "properties": {
          "collation": "SQL_Latin1_General_CP1_CI_AS",
          "maxSizeBytes": 268435456000,
          "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
          "zoneRedundant": false,
          "readScale": "Disabled",
          "requestedBackupStorageRedundancy": "Local"
      }
    }
  ]
}