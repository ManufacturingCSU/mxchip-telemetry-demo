{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "IoTHubNamePrefix": {
      "type": "SecureString",
      "metadata": {
        "description": "Specifies the name of the IoT Hub."
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "containerName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the blob container."
      }
    },
    "ServiceBusNamespacePrefix": {
      "type": "String",
      "metadata": {
        "description": "Specifies the name of the Service Bus Namespace."
      }
    },
    "ConnectionTwilioName": {
      "type": "String",
      "metadata": {
        "description": "Specifies the API Connection Name for the Logic App to Twilio."
      }
    },
    "ConnectionsServicebusName": {
      "type": "String",
      "metadata": {
        "description": "Specifies the API Connection Name for the Logic App to the Service Bus Namespace."
      }
    },
    "LogicAppNamePrefix": {
      "type": "String",
      "metadata": {
        "description": "Specifies the Logic App Name."
      }
    },
    "TwilioPhoneNumber": {
      "type": "String",
      "metadata": {
        "description": "Specifies the telephone number associated with your Twilio Account."
      }
    },
    "streamAnalyticsNamePrefix": {
      "type": "String",
        "metadata": {
        "description": "Specifies the Name for the Streaming Anlytics Job."
      }
    },
    "serverNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SQl Server Admin Username for the SQL Server."
      }
    },
    "serverAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SQl Server Admin Username for the SQL Server."
      }
    },
    "serverAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SQL Server Admin Password for the SQL Server."
      }
    },
    "Serverlogin": {
      "type": "string",
      "defaultValue": "string",
      "metadata": {
        "description": "Specifies the AD login for the SQL Server."
      }
    },
    "subscriptionid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD object id."
      }
    },
    "objectid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD object id."
      }
    },
    "tenantid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD tenantid."
      }
    }
  },
    "variables": {
    "IoTHubName": "[concat( parameters('IoTHubNamePrefix'), uniqueString(resourceGroup().id) )]",
    "storageAccountName": "[toLower( concat( parameters('storageAccountNamePrefix'), uniqueString(resourceGroup().id) ) )]",
    "serverName": "[concat( parameters('serverNamePrefix'), uniqueString(resourceGroup().id) )]",
    "ServiceBusNamespace": "[concat( parameters('ServiceBusNamespacePrefix'), uniqueString(resourceGroup().id) )]",
    "LogicAppName": "[concat( parameters('LogicAppNamePrefix'), uniqueString(resourceGroup().id) )]",
    "streamAnalyticsName": "[concat( parameters('streamAnalyticsNamePrefix'), uniqueString(resourceGroup().id) )]",
    "resourceGroupName": "[resourceGroup().name]",
    "location": "[resourceGroup().location]",
    "tags": "[resourceGroup().tags]"
  },
  "resources": [
    {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2017-07-01",
        "name": "[variables('LogicAppName')]",
        "location": "[variables('location')]",
        "tags": "[variables('tags')]",
        "properties": {
            "state": "Enabled",
            "definition": {
                "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                    "$connections": {
                        "defaultValue": {},
                        "type": "Object"
                    }
                },
                "triggers": {
                    "Service_Bus_Queue": {
                        "recurrence": {
                            "frequency": "Second",
                            "interval": 30
                        },
                        "evaluatedRecurrence": {
                            "frequency": "Second",
                            "interval": 30
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                                }
                            },
                            "method": "get",
                            "path": "/@{encodeURIComponent(encodeURIComponent('sms'))}/messages/head",
                            "queries": {
                                "queueType": "Main"
                            }
                        }
                    }
                },
                "actions": {
                    "Parse_JSON": {
                        "runAfter": {},
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@json(decodeBase64(triggerBody()?['ContentData']))",
                            "schema": {
                                "properties": {
                                    "device": {
                                        "type": "string"
                                    },
                                    "isanomaly": {
                                        "type": "number"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "reading": {
                                        "type": "number"
                                    },
                                    "readingtype": {
                                        "type": "string"
                                    },
                                    "time": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "Send_Text_Message_(SMS)": {
                        "runAfter": {
                            "Parse_JSON": [
                                "Succeeded"
                            ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "body": {
                                "body": "An anomalous reading was recorded for the following device: @{body('Parse_JSON')?['device']} at  @{substring(body('Parse_JSON')?['time'], 0, 19)}.  For more information go to https://apps.preview.powerapps.com/play/bebb0634-9424-4063-967b-8791e1151f42?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47",
                                "from": "[parameters('TwilioPhoneNumber')]",
                                "to": "@body('Parse_JSON')?['phone']"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['twilio']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/Messages.json"
                        }
                    }
                },
                "outputs": {}
            },
            "parameters": {
                "$connections": {
                    "value": {
                        "servicebus": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionid'), '/resourceGroups/',variables('resourceGroupName'),'/providers/Microsoft.Web/connections/', parameters('ConnectionsServicebusName'))]",
                            "connectionName": "servicebus",
                            "id": "[concat('/subscriptions/',parameters('subscriptionid'), '/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/', parameters('ConnectionsServicebusName'))]"
                        },
                        "twilio": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionid'), '/resourceGroups/',variables('resourceGroupName'),'/providers/Microsoft.Web/connections/', parameters('ConnectionTwilioName'))]",
                            "connectionName": "twilio",
                            "id": "[concat('/subscriptions/', parameters('subscriptionid'), '/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/', parameters('ConnectionTwilioName'))]"
                        }
                    }
                }
            }
        }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "apiVersion": "2021-10-01-preview",
      "name": "[variables('streamAnalyticsName')]",
      "location": "[resourceGroup().location]",
      "tags": "[resourceGroup().tags]",
      "sku": {
          "name": "Standard",
          "capacity": 3
      },
      "properties": {
          "sku": {
              "name": "Standard"
          },
          //"outputStartMode": "JobStartTime",
          //"outputStartTime": "2022-07-11T12:44:53.343Z",
          "eventsOutOfOrderPolicy": "Adjust",
          "outputErrorPolicy": "Stop",
          "eventsOutOfOrderMaxDelayInSeconds": 0,
          "eventsLateArrivalMaxDelayInSeconds": 5,
          "dataLocale": "en-US",
          "compatibilityLevel": "1.2",
          "contentStoragePolicy": "SystemAccount",
          "jobType": "Cloud"
      }
  },
  {
      "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
      "apiVersion": "2021-10-01-preview",
      "name": "[concat(variables('streamAnalyticsName'), '/iothub')]",
      "dependsOn": [
          "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('streamAnalyticsName'))]"
      ],
      "properties": {
          "type": "Stream",
          "datasource": {
              "type": "Microsoft.Devices/IotHubs",
              "properties": {
                  "iotHubNamespace": "[variables('IoTHubName')]",
                  "sharedAccessPolicyName": "iothubowner",
                  "sharedAccessPolicyKey":"[concat('HostName=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('IoTHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).hostName, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', variables('IoTHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey)]",
                  "endpoint": "messages/events",
                  "consumerGroupName": "telemetry"
              }
          },
          "compression": {
              "type": "None"
          },
          "serialization": {
              "type": "Json",
              "properties": {
                  "encoding": "UTF8"
              }
          }
      }
  },
  {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2021-10-01-preview",
      "name": "[concat(variables('streamAnalyticsName'), '/servicebusqueue')]",
      "dependsOn": [
          "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('streamAnalyticsName'))]"
      ],
      "properties": {
          "datasource": {
              "type": "Microsoft.ServiceBus/Queue",
              "properties": {
                  "queueName": "sms",
                  "propertyColumns": [],
                  "systemPropertyColumns": {},
                  "serviceBusNamespace": "[variables('serviceBusNamespace')]",
                  "sharedAccessPolicyName": "RootManageSharedAccessKey",
                  "sharedAccessPolicyKey":"[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules',variables('serviceBusNamespace'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString]",
                  "authenticationMode": "ConnectionString"
              }
          },
          "serialization": {
              "type": "Json",
              "properties": {
                  "encoding": "UTF8",
                  "format": "Array"
              }
          }
      }
  },
  {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2021-10-01-preview",
      "name": "[concat(variables('streamAnalyticsName'), '/sql')]",
      "dependsOn": [
          "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('streamAnalyticsName'))]"
      ],
      "properties": {
          "datasource": {
              "type": "Microsoft.Sql/Server/Database",
              "properties": {
                  "maxWriterCount": 1,
                  "maxBatchCount": 10000,
                  "table": "[[dbo].[Telemetry]",
                  "server": "[variables('serverName')]",
                  "database": "IoT",
                  "user": "[parameters('serverAdminUsername')]",
                  "password":"[parameters('serverAdminUsername')]",
                  "authenticationMode": "ConnectionString"
              }
          }
      }
  }
  ]
}