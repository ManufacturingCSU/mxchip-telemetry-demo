{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "IoTHubNamePrefix": {
      "type": "SecureString",
      "metadata": {
        "description": "Specifies the name of the IoT Hub."
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Azure Storage account."
      }
    },
    "containerName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the blob container."
      }
    },
    "ServiceBusNamespacePrefix": {
      "type": "String",
      "metadata": {
        "description": "Specifies the name of the Service Bus Namespace."
      }
    },
    "ConnectionTwilioName": {
      "type": "String",
      "metadata": {
        "description": "Specifies the API Connection Name for the Logic App to Twilio."
      }
    },
    "ConnectionsServicebusName": {
      "type": "String",
      "metadata": {
        "description": "Specifies the API Connection Name for the Logic App to the Service Bus Namespace."
      }
    },
    "LogicAppNamePrefix": {
      "type": "String",
      "metadata": {
        "description": "Specifies the Logic App Name."
      }
    },
    "TwilioPhoneNumber": {
      "type": "String",
      "metadata": {
        "description": "Specifies the telephone number associated with your Twilio Account."
      }
    },
    "serverNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name for the SQL Server."
      }
    },
    "serverAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SQl Server Admin Username for the SQL Server."
      }
    },
    "serverAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SQL Server Admin Password for the SQL Server."
      }
    },
    "Serverlogin": {
      "type": "string",
      "defaultValue": "string",
      "metadata": {
        "description": "Specifies the AD login for the SQL Server."
      }
    },
    "subscriptionid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD object id."
      }
    },
    "objectid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD object id."
      }
    },
    "tenantid": {
      "type": "string",
      "metadata": {
        "description": "Specifies the AD tenantid."
      }
    }
  },
    "variables": {
    "IoTHubName": "[concat( parameters('IoTHubNamePrefix'), uniqueString(resourceGroup().id) )]",
    "storageAccountName": "[toLower( concat( parameters('storageAccountNamePrefix'), uniqueString(resourceGroup().id) ) )]",
    "serverName": "[concat( parameters('serverNamePrefix'), uniqueString(resourceGroup().id) )]",
    "ServiceBusNamespace": "[concat( parameters('ServiceBusNamespacePrefix'), uniqueString(resourceGroup().id) )]",
    "LogicAppName": "[concat( parameters('LogicAppNamePrefix'), uniqueString(resourceGroup().id) )]",
    "resourceGroupName": "[resourceGroup().name]",
    "location": "[resourceGroup().location]",
    "tags": "[resourceGroup().tags]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
          //"defaultToOAuthAuthentication": false,
          //"allowCrossTenantReplication": false,
          "minimumTlsVersion": "TLS1_2",
          "allowBlobPublicAccess": true,
          "allowSharedKeyAccess": true,
          "isHnsEnabled": true,
          "networkAcls": {
              "bypass": "AzureServices",
              "virtualNetworkRules": [],
              "ipRules": [],
              "defaultAction": "Allow"
          },
          "supportsHttpsTrafficOnly": true,
          "encryption": {
              "services": {
                  "blob": {
                      "keyType": "Account",
                      "enabled": true
                  }
              },
              "keySource": "Microsoft.Storage"
          },
          "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
      },
      "properties": {
          "containerDeleteRetentionPolicy": {
              "enabled": true,
              "days": 7
          },
          "cors": {
              "corsRules": []
          },
          "deleteRetentionPolicy": {
              "allowPermanentDelete": false,
              "enabled": false
          }
      }
    },
   {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default/', parameters('containerName'))]",
      "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
          "defaultEncryptionScope": "$account-encryption-key",
          "denyEncryptionScopeOverride": false,
          "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2021-07-02",
      "name": "[variables('IoTHubName')]",
      "location": "[variables('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Storage/StorageAccounts', variables('storageAccountName'))]"
      ],
      "tags": "[variables('tags')]",
      "sku": {
          "name": "S1",
          "tier": "Standard",
          "capacity": 2
      },
      "identity": {
          "type": "SystemAssigned"
      },
      "properties": {
          "ipFilterRules": [],
          "eventHubEndpoints": {
              "events": {
                  "retentionTimeInDays": 1,
                  "partitionCount": 4
              }
          },
          "routing": {
              "endpoints": {
                  "serviceBusQueues": [],
                  "serviceBusTopics": [],
                  "eventHubs": [],
                  "storageContainers": [
                      {
                          "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]",
                          "containerName": "[parameters('containerName')]",
                          "fileNameFormat": "{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}.json",
                          "batchFrequencyInSeconds": 100,
                          "maxChunkSizeInBytes": 104857600,
                          "encoding": "json",
                          "name": "datalake"
                      }
                  ]
              },
              "routes": [
                  {
                      "name": "events",
                      "source": "DeviceMessages",
                      "condition": "true",
                      "endpointNames": [
                          "events"
                      ],
                      "isEnabled": true
                  },
                  {
                      "name": "datalake",
                      "source": "DeviceMessages",
                      "condition": "true",
                      "endpointNames": [
                          "datalake"
                      ],
                      "isEnabled": true
                  }
              ],
              "fallbackRoute": {
                  "name": "$fallback",
                  "source": "DeviceMessages",
                  "condition": "true",
                  "endpointNames": [
                      "events"
                  ],
                  "isEnabled": true
              }
          },
          "storageEndpoints": {
              "$default": {
                  "sasTtlAsIso8601": "PT1H",
                  "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]",
                  "containerName": "[parameters('ContainerName')]"
              }
          },
          "messagingEndpoints": {
              "fileNotifications": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
              }
          },
          "enableFileUploadNotifications": false,
          "cloudToDevice": {
              "maxDeliveryCount": 10,
              "defaultTtlAsIso8601": "PT1H",
              "feedback": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
              }
          },
          "features": "None",
          "minTlsVersion": "1.2",
          "disableLocalAuth": false,
          "allowedFqdnList": []
      }
    },
    {
        "type": "Microsoft.ServiceBus/namespaces",
        "apiVersion": "2022-01-01-preview",
        "name": "[variables('ServiceBusNamespace')]",
        "location": "[variables('location')]",
        "tags": "[variables('tags')]",
        "sku": {
              "name": "Standard",
              "tier": "Standard"
        },
        "properties": {
            "minimumTlsVersion": "1.2",
            "publicNetworkAccess": "Enabled",
            "disableLocalAuth": false,
            "zoneRedundant": false
        }
    },
    {
        "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
        "apiVersion": "2022-01-01-preview",
        "name": "[concat(variables('ServiceBusNamespace'), '/RootManageSharedAccessKey')]",
        "location": "[variables('location')]",
        "dependsOn": [
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]"
        ],
        "properties": {
            "rights": [
                "Listen",
                "Manage",
                "Send"
            ]
        }
    },
    {
        "type": "Microsoft.ServiceBus/namespaces/networkRuleSets",
        "apiVersion": "2022-01-01-preview",
        "name": "[concat(variables('ServiceBusNamespace'), '/default')]",
        "location": "[variables('location')]",
        "dependsOn": [
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]"
        ],
        "properties": {
            "publicNetworkAccess": "Enabled",
            "defaultAction": "Allow",
            //"virtualNetworkRules": [],
            "ipRules": []
        }
    },
    {
        "type": "Microsoft.ServiceBus/namespaces/queues",
        "apiVersion": "2022-01-01-preview",
        "name": "[concat(variables('ServiceBusNamespace'), '/sms')]",
        "location": "[variables('location')]",
        "dependsOn": [
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('ServiceBusNamespace'))]"
        ],
        "properties": {
            "maxMessageSizeInKilobytes": 256,
            "lockDuration": "PT30S",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P1D",
            "deadLetteringOnMessageExpiration": false,
            "enableBatchedOperations": true,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "status": "Active",
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
        }
    },
   {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('ConnectionsServicebusName')]",
      "location": "[variables('location')]",
      "kind": "V1",
      "properties": {
          "displayName": "sms",
          "statuses": [
              {
                  "status": "Connected"
              }
          ],
          "customParameterValues": {},
          "nonSecretParameterValues": {},
          //"createdTime": "2021-09-12T22:21:28.9871474Z",
          //"changedTime": "2021-09-12T22:21:28.9871474Z",
          "api": {
              "name": "[parameters('ConnectionsServicebusName')]",
              "displayName": "Service Bus",
              "description": "Connect to Azure Service Bus to send and receive messages. You can perform actions such as send to queue, send to topic, receive from queue, receive from subscription, etc.",
              "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1568/1.0.1568.2757/', parameters('ConnectionsServicebusName'), '/icon.png')]",
              "brandColor": "#c4d5ff",
              "id": "[concat('/subscriptions/',parameters('subscriptionid'), '/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/', parameters('ConnectionsServicebusName'))]",
              "type": "Microsoft.Web/locations/managedApis"
          },
          "testLinks": []
        }
      },
      {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[parameters('ConnectionTwilioName')]",
        "location": "[variables('location')]",
        "kind": "V1",
        "properties": {
            "displayName": "twilio",
            "statuses": [
                {
                    "status": "Connected"
                }
            ],
            "customParameterValues": {},
            "nonSecretParameterValues": {},
            "createdTime": "2021-09-12T22:24:57.6511607Z",
            "changedTime": "2021-09-12T22:24:57.6511607Z",
            "api": {
                "name": "twilio",
                "displayName": "Twilio",
                "description": "Twilio enables apps to send and receive global SMS, MMS and IP messages.", 
                "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1450/1.0.1450.2361/twilio/icon.png",
                "brandColor": "#e22228",
                "id": "[concat('/subscriptions/', parameters('subscriptionid'), '/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/', parameters('ConnectionTwilioName'))]",
                "type": "Microsoft.Web/locations/managedApis"
            },
            "testLinks": [
                {
                    "requestUri": "[concat('https://management.azure.com:443/subscriptions/', parameters('subscriptionid'),'/resourceGroups/',variables('resourceGroupName'),'/providers/Microsoft.Web/connections/', parameters('ConnectionTwilioName'), '/extensions/proxy/Messages.json?api-version=2016-06-01')]",
                    "method": "get"
                }
            ]
        }
    },

    {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2017-07-01",
        "name": "[variables('LogicAppName')]",
        "location": "[variables('location')]",
        "tags": "[variables('tags')]",
        "properties": {
            "state": "Enabled",
            "definition": {
                "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                    "$connections": {
                        "defaultValue": {},
                        "type": "Object"
                    }
                },
                "triggers": {
                    "Service_Bus_Queue": {
                        "recurrence": {
                            "frequency": "Second",
                            "interval": 30
                        },
                        "evaluatedRecurrence": {
                            "frequency": "Second",
                            "interval": 30
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                                }
                            },
                            "method": "get",
                            "path": "/@{encodeURIComponent(encodeURIComponent('sms'))}/messages/head",
                            "queries": {
                                "queueType": "Main"
                            }
                        }
                    }
                },
                "actions": {
                    "Parse_JSON": {
                        "runAfter": {},
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@json(decodeBase64(triggerBody()?['ContentData']))",
                            "schema": {
                                "properties": {
                                    "device": {
                                        "type": "string"
                                    },
                                    "isanomaly": {
                                        "type": "number"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "reading": {
                                        "type": "number"
                                    },
                                    "readingtype": {
                                        "type": "string"
                                    },
                                    "time": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "Send_Text_Message_(SMS)": {
                        "runAfter": {
                            "Parse_JSON": [
                                "Succeeded"
                            ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "body": {
                                "body": "An anomalous reading was recorded for the following device: @{body('Parse_JSON')?['device']} at  @{substring(body('Parse_JSON')?['time'], 0, 19)}.  For more information go to https://apps.preview.powerapps.com/play/bebb0634-9424-4063-967b-8791e1151f42?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47",
                                "from": "[parameters('TwilioPhoneNumber')]",
                                "to": "@body('Parse_JSON')?['phone']"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['twilio']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/Messages.json"
                        }
                    }
                },
                "outputs": {}
            },
            "parameters": {
                "$connections": {
                    "value": {
                        "servicebus": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionid'), '/resourceGroups/',variables('resourceGroupName'),'/providers/Microsoft.Web/connections/', parameters('ConnectionsServicebusName'))]",
                            "connectionName": "servicebus",
                            "id": "[concat('/subscriptions/',parameters('subscriptionid'), '/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/', parameters('ConnectionsServicebusName'))]"
                        },
                        "twilio": {
                            "connectionId": "[concat('/subscriptions/',parameters('subscriptionid'), '/resourceGroups/',variables('resourceGroupName'),'/providers/Microsoft.Web/connections/', parameters('ConnectionTwilioName'))]",
                            "connectionName": "twilio",
                            "id": "[concat('/subscriptions/', parameters('subscriptionid'), '/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/', parameters('ConnectionTwilioName'))]"
                        }
                    }
                }
            }
        }
    },
    {
      "name": "[variables('serverName')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2020-11-01-preview",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "administratorLogin": "[parameters('serverAdminUsername')]",
        "administratorLoginPassword": "[parameters('serverAdminPassword')]",
        "version": "12.0",
        "minimalTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "administrators": {
          "administratorType": "ActiveDirectory",
          "principalType": "User",
          "login": "[parameters('serverlogin')]",
          "sid": "[parameters('objectid')]",
          "tenantId": "[parameters('tenantid')]"
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2020-11-01-preview",
      "name": "[concat(variables('serverName'), '/IoT')]",
      "location": "[variables('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
      ],
      "tags": "[variables('tags')]",
      "sku": {
          "name": "Standard",
          "tier": "Standard",
          "capacity": 50
      },
      "kind": "v12.0,user",
      "properties": {
          "collation": "SQL_Latin1_General_CP1_CI_AS",
          "maxSizeBytes": 268435456000,
          "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
          "zoneRedundant": false,
          "readScale": "Disabled",
          "requestedBackupStorageRedundancy": "Local"
      }
    }
  ]
}